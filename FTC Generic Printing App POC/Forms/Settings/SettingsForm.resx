<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gRn0bgAAAABJRU5ErkJggg==
</value>
  </data>
</root>